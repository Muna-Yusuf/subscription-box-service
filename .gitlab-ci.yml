image: node:18-alpine

stages:
  - lint
  - test
  - build
  - deploy

variables:
  POSTGRES_DB: subscription_box_test
  POSTGRES_USER: test_user
  POSTGRES_PASSWORD: test_password
  DATABASE_URL: "postgresql://test_user:test_password@postgres:5432/subscription_box_test"
  REDIS_URL: "redis://redis:6379"
  JWT_SECRET: "test-jwt-secret-for-ci"

services:
  - name: postgres:15-alpine
    alias: postgres
  - name: redis:7-alpine
    alias: redis

cache:
  paths:
    - node_modules/
    - .bun/

before_script:
  - apk add --no-cache curl
  - curl -fsSL https://bun.sh/install | bash
  - export PATH="$HOME/.bun/bin:$PATH"
  - bun --version
  - bun install

lint:
  stage: lint
  script:
    - bun run lint
  only:
    - merge_requests
    - main

test:
  stage: test
  script:
    - bun test --coverage
  artifacts:
    paths:
      - coverage/
    reports:
      cobertura: coverage/cobertura-coverage.xml
  only:
    - merge_requests
    - main

build:
  stage: build
  script:
    - bun run build
  artifacts:
    paths:
      - dist/
  only:
    - main

deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t subscription-box-service:latest .
    - echo "Deployment would happen here (e.g., to Kubernetes, AWS ECS, etc.)"
  only:
    - main